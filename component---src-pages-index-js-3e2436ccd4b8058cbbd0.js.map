{"version":3,"file":"component---src-pages-index-js-3e2436ccd4b8058cbbd0.js","mappings":"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","sources":["webpack://blog.jh8459.com/./src/pages/index.js","webpack://blog.jh8459.com/./src/utils/helpers.js","webpack://blog.jh8459.com/./src/components/post-card/index.js","webpack://blog.jh8459.com/./src/components/post-card-column/index.js","webpack://blog.jh8459.com/./src/components/post-tabs/index.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport Bio from '../components/bio';\nimport Post from '../models/post';\n\nimport { getUniqueCategories } from '../utils/helpers';\nimport PostTabs from '../components/post-tabs';\n\nfunction HomePage({ data }) {\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => new Post(node));\n  const { author, language } = data.site.siteMetadata;\n  const categories = ['All', ...getUniqueCategories(posts)];\n  const featuredTabIndex = categories.findIndex((category) => category === 'featured');\n  const [tabIndex, setTabIndex] = useState(featuredTabIndex === -1 ? 0 : featuredTabIndex);\n  const onTabIndexChange = useCallback((e, value) => setTabIndex(value), []);\n\n  return (\n    <Layout>\n      <Seo title=\"JHLog\" />\n      <Bio author={author} language={language} />\n      <PostTabs\n        posts={posts}\n        onChange={onTabIndexChange}\n        tabs={categories}\n        tabIndex={tabIndex}\n        showMoreButton\n        defaultThumbnail={data.defaultThumbnail}\n      />\n    </Layout>\n  );\n}\n\nexport default HomePage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 500, truncate: true)\n          frontmatter {\n            categories\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            thumbnail # Add thumbnail here\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    defaultThumbnail: file(relativePath: { eq: \"common/NO_IMAGE.png\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 100, height: 100, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n      }\n    }\n\n    site {\n      siteMetadata {\n        language\n        author {\n          name\n          bio {\n            role\n            description\n            thumbnail\n          }\n          social {\n            github\n            linkedIn\n            email\n          }\n        }\n      }\n    }\n  }\n`;\n","export const getUniqueCategories = (posts) => {\n  const categorySet = new Set();\n  posts.forEach(({ categories }) => categories.forEach((category) => categorySet.add(category)));\n  return [...categorySet].sort((a, b) => {\n    if (a === 'featured') return -1;\n    if (b === 'featured') return 1;\n    return 0;\n  });\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nfunction PostCard({ post, defaultThumbnail }) {\n  const { id, slug, title, excerpt, date, categories, thumbnail } = post;\n  const isNew = Math.ceil((new Date().getTime() - new Date(date).getTime()) / (1000 * 3600 * 24)) <= 7;\n\n  const isExternalImage = typeof thumbnail === 'string' && (thumbnail.startsWith('http://') || thumbnail.startsWith('https://'));\n  const displayImage = isExternalImage ? thumbnail : (defaultThumbnail ? getImage(defaultThumbnail) : null);\n\n  return (\n    <div className=\"min-h-[150px] w-full flex justify-center\">\n      <Link className=\"post-card flex flex-col h-auto w-full max-w-content border border-[var(--post-card-border-color)] rounded-[6px] p-[15px] mb-[15px] text-[var(--primary-text-color)] cursor-pointer transition-transform duration-200 hover:scale-105 md:mb-0\" key={id} to={slug}>\n        <h2 className=\"title text-[18px] font-semibold mb-[7px] leading-[1.4] hover:underline\">\n          <span className=\"relative\">\n            {title}\n            {isNew && <span className=\"absolute top-[-5px] right-[-10px] text-red-500 font-bold text-xs\" style={{ textShadow: '1px 1px 2px rgba(0,0,0,0.3)' }}>N</span>}\n          </span>\n        </h2>\n\n        <div className=\"flex flex-grow mt-[10px]\">\n          {(isExternalImage || displayImage) && (\n            <div className=\"w-[100px] h-[100px] min-w-[100px] mr-[15px] overflow-hidden rounded-[4px] flex justify-center items-center\">\n              {isExternalImage ? (\n                <img src={displayImage} alt={title} className=\"w-full h-full object-cover object-center\" />\n              ) : (\n                <GatsbyImage image={displayImage} alt={title} className=\"w-full h-full object-cover object-center\" />\n              )}\n            </div>\n          )}\n          <p\n            className={`description text-[13px] leading-[20px] text-[var(--primary-text-color)] overflow-hidden text-ellipsis line-clamp-3 md:line-clamp-4 ${isExternalImage ? '' : 'w-full'}`}\n            dangerouslySetInnerHTML={{ __html: excerpt }}\n          />\n        </div>\n\n        <div className=\"info flex justify-between mt-auto text-[14px] text-[var(--about-link-icon-color)] pt-[10px]\">\n          <div className=\"categories flex\">\n            {categories.map((category) => (\n              <span\n                className=\"category mr-[4px] hover:underline\"\n                key={category}\n              >\n                {category}\n              </span>\n            ))}\n          </div>\n          <div className=\"ml-4\">{date}</div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nexport default PostCard;\n","import { navigate } from 'gatsby-link';\nimport React, { useCallback } from 'react';\nimport PostCard from '../post-card';\n\nfunction PostCardColumn({ posts, showMoreButton, moreUrl, defaultThumbnail }) {\n  const onMoreButtonClick = useCallback(() => {\n    navigate(moreUrl);\n  }, [moreUrl]);\n\n  return (\n    <div className=\"flex justify-center w-full\">\n      <div className=\"flex flex-col items-center space-y-4 w-full max-w-4xl\">\n        {posts.map((post, index) => (\n          <PostCard key={index} post={post} defaultThumbnail={defaultThumbnail} />\n        ))}\n        {showMoreButton && (\n          <button\n            className=\"h-10 px-4 font-medium text-[15px] bg-[var(--button-background-color)] text-[var(--tab-hover-text-color)] rounded hover:bg-gray-300 dark:hover:bg-gray-700 transition-colors duration-200\"\n            onClick={onMoreButtonClick}\n          >\n            More\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PostCardColumn;\n","import React, { useMemo } from 'react';\nimport PostCardColumn from '../post-card-column';\n\nfunction PostTabs({ tabIndex, onChange, tabs, posts, showMoreButton, defaultThumbnail }) {\n  const tabPosts = useMemo(() => {\n    if (tabs[tabIndex] === 'All') return posts;\n    return posts.filter((post) => post.categories.includes(tabs[tabIndex]));\n  }, [posts, tabs, tabIndex]);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center self-start top-0 w-full\">\n      <div className=\"flex justify-center items-center h-[40px] w-full max-w-[760px] mb-[36px] overflow-x-auto mx-auto\">\n        {tabs.map((title, index) => (\n          <button\n            key={index}\n            onClick={() => onChange(null, index)}\n            className={`h-[40px] min-h-auto min-w-auto px-[12px] py-[10px] font-sans text-[17px] font-medium leading-none transition-all duration-200 focus:outline-none ${tabIndex === index ? 'bg-[var(--tab-selected-background-color)] text-[var(--tab-hover-text-color)] rounded-[8px] font-semibold' : 'text-[var(--tab-text-color)] hover:text-[var(--tab-hover-text-color)]'}`}\n          >\n            {title}\n          </button>\n        ))}\n      </div>\n      <PostCardColumn\n        posts={showMoreButton ? tabPosts.slice(0, 4) : tabPosts}\n        showMoreButton={showMoreButton && tabPosts.length > 4}\n        moreUrl={`posts/${tabIndex === 0 ? '' : tabs[tabIndex]}`}\n        defaultThumbnail={defaultThumbnail}\n      />\n    </div>\n  );\n}\nexport default PostTabs;\n"],"names":["_ref","data","posts","allMarkdownRemark","edges","map","_ref2","node","Post","author","language","site","siteMetadata","categories","concat","_toConsumableArray","categorySet","Set","forEach","category","add","sort","a","b","getUniqueCategories","featuredTabIndex","findIndex","tabIndex","setTabIndex","useState","onTabIndexChange","useCallback","e","value","React","Layout","Seo","title","Bio","PostTabs","onChange","tabs","showMoreButton","defaultThumbnail","post","id","slug","excerpt","date","thumbnail","isNew","Math","ceil","Date","getTime","isExternalImage","startsWith","displayImage","getImage","className","Link","key","to","style","textShadow","src","alt","GatsbyImage","image","dangerouslySetInnerHTML","__html","moreUrl","onMoreButtonClick","navigate","index","PostCard","onClick","tabPosts","useMemo","filter","includes","PostCardColumn","slice","length"],"sourceRoot":""}