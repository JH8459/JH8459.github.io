{"version":3,"file":"component---src-templates-blog-template-js-0fdeab9124f977e81ac5.js","mappings":"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","sources":["webpack://blog.jh8459.com/./src/components/post-header/view/index.js","webpack://blog.jh8459.com/./src/components/post-header/index.js","webpack://blog.jh8459.com/./src/components/post-navigator/index.js","webpack://blog.jh8459.com/./src/components/post-content/index.js","webpack://blog.jh8459.com/./src/components/giscus/index.js","webpack://blog.jh8459.com/./src/templates/blog-template.js"],"sourcesContent":["import React from 'react';\nimport { FaSpinner, FaEye } from 'react-icons/fa';\n\nfunction useHasMounted() {\n  const [mounted, setMounted] = React.useState(false);\n  React.useEffect(() => setMounted(true), []);\n  return mounted;\n}\n\nexport default function ViewCount({ viewCount, allowZero = false }) {\n  const hasMounted = useHasMounted();\n  const n = viewCount == null ? null : Number(viewCount);\n  const hasNumber = Number.isFinite(n) && (allowZero ? true : n > 0);\n  const pending = !hasMounted || !hasNumber;\n\n  return (\n    <span className=\"inline-flex items-center\" aria-live=\"polite\" aria-busy={pending}>\n      <FaEye className=\"w-4 h-4 mr-1\" /> {/* Eye icon always visible */}\n      {pending ? (\r\n        <span className=\"flex items-center\">\r\n          <FaSpinner className=\"animate-spin text-[1em] text-[var(--secondary-text-color)] ml-1\" />\r\n        </span>\r\n      ) : (\r\n        <span className=\"flex items-center ml-1\">{n}</span>\r\n      )}\r\n    </span>\n  );\n}\n","import { Link } from 'gatsby';\nimport React, { useState } from 'react';\nimport ViewCount from './view';\nimport { FaRegClock, FaCalendarAlt } from 'react-icons/fa';\n\nfunction PostHeader({ post, viewCount }) {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const isNew =\n    Math.ceil((new Date().getTime() - new Date(post.date).getTime()) / (1000 * 3600 * 24)) <= 7;\n\n  return (\n    <header className=\"flex flex-col justify-center w-full pb-[10px] border-b border-[var(--post-card-border-color)] mt-[40px] mb-[40px] break-keep\">\n      <h1 class=\"title font-semibold text-[32px] text-[var(--primary-text-color)] mb-[6px] leading-[1.3]\">\n        {post.title}\n        {isNew && (\n          <span\n            class=\"inline-block align-super text-red-500 font-bold text-base\"\n            style={{ textShadow: '1px 1px 2px rgba(0,0,0,0.3)', marginLeft: '4px' }}\n          >\n            N\n          </span>\n        )}\n      </h1>\n      <div class=\"flex justify-between items-center w-full mt-[10px]\">\n        <div class=\"categories flex items-center\">\n          {post.emoji && <div class=\"text-[18px] mr-[4px]\">{post.emoji}</div>}\n          {post.categories.map((category) => (\n            <Link\n              class=\"category mr-[4px] font-semibold text-[var(--primary-text-color)] hover:underline text-[18px]\"\n              key={category}\n              to={`/posts/${category}`}\n            >\n              {category}\n            </Link>\n          ))}\n        </div>\n        <div class=\"info flex flex-wrap leading-[1.5] text-base font-medium text-[var(--secondary-text-color)] justify-end items-center space-x-4\">\n          <button\n            type=\"button\"\n            class=\"relative cursor-pointer p-1 transition-all duration-200 hover:scale-105 bg-transparent border-none text-left font-medium text-[var(--secondary-text-color)] flex items-center\"\n            onMouseEnter={() => setShowTooltip(true)}\n            onMouseLeave={() => setShowTooltip(false)}\n            onFocus={() => setShowTooltip(true)}\n            onBlur={() => setShowTooltip(false)}\n          >\n            <FaRegClock class=\"w-4 h-4 mr-1\" />\n            <strong>{`${post.timeToRead} min`}</strong>\n            {showTooltip && (\n              <div class=\"absolute bottom-full left-1/2 -translate-x-1/2 w-max p-2 bg-black text-white text-xs rounded\">\n                {`이 게시글을 읽는데 ${post.timeToRead}분 정도의 시간이 소요될 것으로 예상됩니다.`}\n              </div>\n            )}\n          </button>\n          <ViewCount viewCount={viewCount} expectedDigits={4} />\n          <div class=\"flex items-center\">\n            <FaCalendarAlt class=\"w-4 h-4 mr-1\" /> {post.date}\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\nexport default PostHeader;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\n\nfunction PostNavigator({ prevPost, nextPost }) {\n  return (\n    <div className=\"grid w-full grid-cols-[49.3%_49.3%] gap-[1.4%] mt-[40px]\">\n      {nextPost && (\n        <Link className=\"post-card flex flex-col w-full border border-[var(--post-card-border-color)] rounded-[6px] p-[15px] text-[var(--primary-text-color)] cursor-pointer transition-transform duration-200 hover:scale-105 mr-auto\" key={nextPost.id} to={nextPost.slug}>\n          <div className=\"direction text-[14px] font-medium text-gray-500 mb-[5px]\">이전 글</div>\n          <div className=\"title text-[16px] font-semibold leading-[1.4]\">{nextPost.title}</div>\n          <div className=\"flex justify-between items-center mt-[5px]\">\n            <div className=\"flex items-center text-[14px] font-medium text-[var(--primary-text-color)]\">\n              {nextPost.emoji && <span className=\"mr-[4px]\">{nextPost.emoji}</span>}\n              {nextPost.categories && nextPost.categories.map((category) => (\n                <span key={category} className=\"mr-[4px]\">{category}</span>\n              ))}\n            </div>\n            <div className=\"text-[12px] text-[var(--secondary-text-color)]\">{nextPost.date}</div>\n          </div>\n        </Link>\n      )}\n      {prevPost && (\n        <Link className=\"post-card flex flex-col w-full border border-[var(--post-card-border-color)] rounded-[6px] p-[15px] text-[var(--primary-text-color)] cursor-pointer transition-transform duration-200 hover:scale-105 ml-auto\" key={prevPost.id} to={prevPost.slug}>\n          <div className=\"direction text-[14px] font-medium text-gray-500 mb-[5px]\">다음 글</div>\n          <div className=\"title text-[16px] font-semibold leading-[1.4]\">{prevPost.title}</div>\n          <div className=\"flex justify-between items-center mt-[5px]\">\n            <div className=\"flex items-center text-[14px] font-medium text-[var(--primary-text-color)]\">\n              {prevPost.emoji && <span className=\"mr-[4px]\">{prevPost.emoji}</span>}\n              {prevPost.categories && prevPost.categories.map((category) => (\n                <span key={category} className=\"mr-[4px]\">{category}</span>\n              ))}\n            </div>\n            <div className=\"text-[12px] text-[var(--secondary-text-color)]\">{prevPost.date}</div>\n          </div>\n        </Link>\n      )}\n    </div>\n  );\n}\n\nexport default PostNavigator;\n\n","import React from 'react';\n\n\nfunction PostContent({ html }) {\n  return (\n    <div className=\"flex flex-col justify-center w-full mb-[20px]\">\n      <div className=\"prose dark:prose-invert prose-img:mx-auto mx-auto w-full max-w-content\" dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  );\n}\n\nexport default PostContent;\n\n","import React, { createRef, useEffect, useRef } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst src = 'https://giscus.app/client.js';\n\nfunction Giscus() {\n  const rootElm = createRef();\n  const isGiscusLoaded = useRef(false);\n\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          comments {\n            giscus {\n              repo\n              repoId\n              category\n              categoryId\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { repo, repoId, category, categoryId } = data.site.siteMetadata.comments.giscus;\n\n  useEffect(() => {\n    if (!rootElm.current || isGiscusLoaded.current) return;\n\n    const storedIsDarkMode = localStorage.getItem('isDarkMode');\n    const giscus = document.createElement('script');\n    const giscusConfig = {\n      src,\n      'data-repo': repo,\n      'data-repo-id': repoId,\n      'data-category': category,\n      'data-category-id': categoryId,\n      'data-mapping': 'pathname',\n      'data-strict': '0',\n      'data-reactions-enabled': '1',\n      'data-emit-metadata': '0',\n      'data-input-position': 'bottom',\n      'data-theme': JSON.parse(storedIsDarkMode) ? 'dark' : 'light',\n      'data-lang': 'ko',\n      crossorigin: 'anonymous',\n      async: true,\n    };\n\n    Object.keys(giscusConfig).forEach((configKey) => {\n      giscus.setAttribute(configKey, giscusConfig[configKey]);\n    });\n\n    rootElm.current.appendChild(giscus);\n    isGiscusLoaded.current = true;\n  }, [rootElm, repo, repoId, category, categoryId]);\n\n  return <div id=\"giscus-comments\" ref={rootElm} />;\n}\n\nexport default Giscus;\n","import React, { useEffect, useState } from 'react';\r\nimport firebase from 'gatsby-plugin-firebase-v9.0';\r\nimport { getDatabase, ref, set, get, child, update } from 'firebase/database';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../layout';\r\nimport Seo from '../components/seo';\r\nimport PostHeader from '../components/post-header';\r\nimport PostNavigator from '../components/post-navigator';\r\nimport Post from '../models/post';\r\nimport PostContent from '../components/post-content';\r\nimport Giscus from '../components/giscus';\r\n\r\nfunction BlogTemplate({ data }) {\r\n  const [viewCount, setViewCount] = useState(0);\r\n\r\n  const curPost = new Post(data.cur);\r\n  const prevPost = data.prev ? new Post(data.prev) : null;\r\n  const nextPost = data.next ? new Post(data.next) : null;\r\n  const { siteUrl, comments } = data.site?.siteMetadata;\r\n  const giscusRepo = comments?.giscus?.repo;\r\n\r\n  useEffect(() => {\r\n    if (!siteUrl) return;\r\n\r\n    const key = curPost.slug.replace(/\\//g, '');\r\n\r\n    const database = getDatabase(firebase);\r\n    const postRef = ref(database, 'posts/' + key);\r\n\r\n    get(child(ref(database), `posts/${key}`))\r\n      .then((snapshot) => {\r\n        if (snapshot.exists()) {\r\n          const currentViews = snapshot.val().views;\r\n\r\n          if (process.env.NODE_ENV !== 'development') {\r\n            const updatedViews = currentViews + 1;\r\n\r\n            update(postRef, { views: updatedViews });\r\n            setViewCount(updatedViews);\r\n          } else {\r\n            setViewCount(currentViews);\r\n          }\r\n        } else {\r\n          if (process.env.NODE_ENV !== 'development') {\r\n            // key 값이 존재하지 않으면 1으로 설정\r\n            set(postRef, { views: 1 });\r\n            setViewCount(1); // 상태 업데이트\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Firebase read failed: ', error);\r\n      });\r\n  }, [siteUrl, curPost.slug]);\r\n\r\n  return (\r\n    <Layout tableOfContents={curPost.tableOfContents}>\r\n      <Seo title={curPost?.title} description={curPost?.excerpt} />\r\n      <PostHeader post={curPost} viewCount={viewCount} />\r\n      <PostContent html={curPost.html} />\r\n      <PostNavigator prevPost={prevPost} nextPost={nextPost} />\r\n      <div className=\"mt-8 w-full\">\r\n        {giscusRepo && <Giscus repo={giscusRepo} path={curPost.slug} />}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default BlogTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query ($slug: String, $nextSlug: String, $prevSlug: String) {\r\n    cur: markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      html\r\n      excerpt(pruneLength: 500, truncate: true)\r\n      timeToRead\r\n      tableOfContents\r\n      frontmatter {\r\n        date(formatString: \"YYYY.MM.DD\")\r\n        title\r\n        categories\r\n        author\r\n        emoji\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n\r\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\r\n      id\r\n      frontmatter {\r\n        date(formatString: \"YYYY.MM.DD\")\r\n\r\n        title\r\n        categories\r\n        author\r\n        emoji\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n\r\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\r\n      id\r\n      frontmatter {\r\n        date(formatString: \"YYYY.MM.DD\")\r\n        title\r\n        categories\r\n        author\r\n        emoji\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n\r\n    site {\r\n      siteMetadata {\r\n        siteUrl\r\n        comments {\r\n          giscus {\r\n            repo\r\n            repoId\r\n            category\r\n            categoryId\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["ViewCount","_ref","viewCount","allowZero","hasMounted","mounted","setMounted","React","useHasMounted","n","Number","hasNumber","isFinite","pending","className","FaEye","FaSpinner","post","showTooltip","setShowTooltip","useState","isNew","Math","ceil","Date","getTime","date","class","title","style","textShadow","marginLeft","emoji","categories","map","category","Link","key","to","type","onMouseEnter","onMouseLeave","onFocus","onBlur","FaRegClock","timeToRead","expectedDigits","FaCalendarAlt","prevPost","nextPost","id","slug","html","dangerouslySetInnerHTML","__html","rootElm","createRef","isGiscusLoaded","useRef","data","useStaticQuery","repo","repoId","categoryId","site","siteMetadata","comments","giscus","useEffect","current","storedIsDarkMode","localStorage","getItem","document","createElement","giscusConfig","src","JSON","parse","crossorigin","async","Object","keys","forEach","configKey","setAttribute","appendChild","ref","_data$site","_comments$giscus","setViewCount","curPost","Post","cur","prev","next","siteUrl","giscusRepo","replace","database","getDatabase","firebase","postRef","get","child","then","snapshot","exists","updatedViews","val","views","update","set","catch","error","console","Layout","tableOfContents","Seo","description","excerpt","PostHeader","PostContent","PostNavigator","Giscus","path"],"sourceRoot":""}