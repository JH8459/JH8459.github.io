{"version":3,"file":"component---src-templates-category-template-js-e975e73294f5abb1976d.js","mappings":"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","sources":["webpack://blog.jh8459.com/./src/components/post-card/index.js","webpack://blog.jh8459.com/./src/components/post-card-column/index.js","webpack://blog.jh8459.com/./src/components/post-tabs/index.js","webpack://blog.jh8459.com/./src/components/category-page-header/index.js","webpack://blog.jh8459.com/./src/templates/category-template.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nfunction PostCard({ post, defaultThumbnail }) {\n  const { id, slug, title, excerpt, date, categories, thumbnail } = post;\n  const isNew = Math.ceil((new Date().getTime() - new Date(date).getTime()) / (1000 * 3600 * 24)) <= 7;\n\n  const isExternalImage = typeof thumbnail === 'string' && (thumbnail.startsWith('http://') || thumbnail.startsWith('https://'));\n  const displayImage = isExternalImage ? thumbnail : (defaultThumbnail ? getImage(defaultThumbnail) : null);\n\n  return (\n    <div className=\"min-h-[150px] w-full flex justify-center\">\n      <Link className=\"post-card flex flex-col h-auto w-full max-w-content border border-[var(--post-card-border-color)] rounded-[6px] p-[15px] mb-[15px] text-[var(--primary-text-color)] cursor-pointer transition-transform duration-200 hover:scale-105 md:mb-0\" key={id} to={slug}>\n        <h2 className=\"title text-[18px] font-semibold mb-[7px] leading-[1.4] hover:underline\">\n          <span className=\"relative\">\n            {title}\n            {isNew && <span className=\"absolute top-[-5px] right-[-10px] text-red-500 font-bold text-xs\" style={{ textShadow: '1px 1px 2px rgba(0,0,0,0.3)' }}>N</span>}\n          </span>\n        </h2>\n\n        <div className=\"flex flex-grow mt-[10px]\">\n          {(isExternalImage || displayImage) && (\n            <div className=\"w-[100px] h-[100px] min-w-[100px] mr-[15px] overflow-hidden rounded-[4px] flex justify-center items-center\">\n              {isExternalImage ? (\n                <img src={displayImage} alt={title} className=\"w-full h-full object-cover object-center\" />\n              ) : (\n                <GatsbyImage image={displayImage} alt={title} className=\"w-full h-full object-cover object-center\" />\n              )}\n            </div>\n          )}\n          <p\n            className={`description text-[13px] leading-[20px] text-[var(--primary-text-color)] overflow-hidden text-ellipsis line-clamp-3 md:line-clamp-4 ${isExternalImage ? '' : 'w-full'}`}\n            dangerouslySetInnerHTML={{ __html: excerpt }}\n          />\n        </div>\n\n        <div className=\"info flex justify-between mt-auto text-[14px] text-[var(--about-link-icon-color)] pt-[10px]\">\n          <div className=\"categories flex\">\n            {categories.map((category) => (\n              <span\n                className=\"category mr-[4px] hover:underline\"\n                key={category}\n              >\n                {category}\n              </span>\n            ))}\n          </div>\n          <div className=\"ml-4\">{date}</div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nexport default PostCard;\n","import { navigate } from 'gatsby-link';\nimport React, { useCallback } from 'react';\nimport PostCard from '../post-card';\n\nfunction PostCardColumn({ posts, showMoreButton, moreUrl, defaultThumbnail }) {\n  const onMoreButtonClick = useCallback(() => {\n    navigate(moreUrl);\n  }, [moreUrl]);\n\n  return (\n    <div className=\"flex justify-center w-full\">\n      <div className=\"flex flex-col items-center space-y-4 w-full max-w-4xl\">\n        {posts.map((post, index) => (\n          <PostCard key={index} post={post} defaultThumbnail={defaultThumbnail} />\n        ))}\n        {showMoreButton && (\n          <button\n            className=\"h-10 px-4 font-medium text-[15px] bg-[var(--button-background-color)] text-[var(--tab-hover-text-color)] rounded hover:bg-gray-300 dark:hover:bg-gray-700 transition-colors duration-200\"\n            onClick={onMoreButtonClick}\n          >\n            More\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PostCardColumn;\n","import React, { useMemo } from 'react';\nimport PostCardColumn from '../post-card-column';\n\nfunction PostTabs({ tabIndex, onChange, tabs, posts, showMoreButton, defaultThumbnail }) {\n  const tabPosts = useMemo(() => {\n    if (tabs[tabIndex] === 'All') return posts;\n    return posts.filter((post) => post.categories.includes(tabs[tabIndex]));\n  }, [posts, tabs, tabIndex]);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center self-start top-0 w-full\">\n      <div className=\"flex justify-center items-center h-[40px] w-full max-w-[760px] mb-[36px] overflow-x-auto mx-auto\">\n        {tabs.map((title, index) => (\n          <button\n            key={index}\n            onClick={() => onChange(null, index)}\n            className={`h-[40px] min-h-auto min-w-auto px-[12px] py-[10px] font-sans text-[17px] font-medium leading-none transition-all duration-200 focus:outline-none ${tabIndex === index ? 'bg-[var(--tab-selected-background-color)] text-[var(--tab-hover-text-color)] rounded-[8px] font-semibold' : 'text-[var(--tab-text-color)] hover:text-[var(--tab-hover-text-color)]'}`}\n          >\n            {title}\n          </button>\n        ))}\n      </div>\n      <PostCardColumn\n        posts={showMoreButton ? tabPosts.slice(0, 4) : tabPosts}\n        showMoreButton={showMoreButton && tabPosts.length > 4}\n        moreUrl={`posts/${tabIndex === 0 ? '' : tabs[tabIndex]}`}\n        defaultThumbnail={defaultThumbnail}\n      />\n    </div>\n  );\n}\nexport default PostTabs;\n","import React from 'react';\n\nfunction CategoryPageHeader({ title, subtitle }) {\n  return (\n    <div className=\"flex flex-col items-center justify-center mt-[30px] mb-[30px]\">\n      <h1 className=\"w-fit pb-[7px] mb-[15px] text-[40px] font-bold text-center border-b-[3px] border-[var(--primary-text-color)]\">\n        {title}\n      </h1>\n      <p className=\"pb-[10px] text-[20px] font-medium text-center\">{subtitle}</p>\n    </div>\n  );\n}\n\nexport default CategoryPageHeader;\n","import React, { useMemo, useCallback } from 'react';\nimport { navigate } from 'gatsby';\n\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport Post from '../models/post';\nimport CategoryPageHeader from '../components/category-page-header';\nimport PostTabs from '../components/post-tabs';\n\nfunction CategoryTemplate({ pageContext }) {\n  const { edges, currentCategory, defaultThumbnail } = pageContext;\n  const { categories } = pageContext;\n  const currentTabIndex = useMemo(\n    () => categories.findIndex((category) => category === currentCategory),\n    [categories, currentCategory],\n  );\n  const posts = edges.map(({ node }) => new Post(node));\n\n  const onTabIndexChange = useCallback(\n    (e, value) => {\n      if (value === 0) return navigate(`/posts`);\n      navigate(`/posts/${categories[value]}`);\n    },\n    [categories],\n  );\n\n  return (\n    <Layout>\n      <Seo title=\"Posts\" />\n      <CategoryPageHeader title={categories[currentTabIndex]} subtitle={`${posts.length} posts`} />\n      <PostTabs\n        tabIndex={currentTabIndex}\n        onChange={onTabIndexChange}\n        tabs={categories}\n        posts={posts}\n        defaultThumbnail={defaultThumbnail}\n      />\n    </Layout>\n  );\n}\n\nexport default CategoryTemplate;\n"],"names":["_ref","post","defaultThumbnail","id","slug","title","excerpt","date","categories","thumbnail","isNew","Math","ceil","Date","getTime","isExternalImage","startsWith","displayImage","getImage","React","className","Link","key","to","style","textShadow","src","alt","GatsbyImage","image","dangerouslySetInnerHTML","__html","map","category","posts","showMoreButton","moreUrl","onMoreButtonClick","useCallback","navigate","index","PostCard","onClick","tabIndex","onChange","tabs","tabPosts","useMemo","filter","includes","PostCardColumn","slice","length","subtitle","pageContext","edges","currentCategory","currentTabIndex","findIndex","_ref2","node","Post","onTabIndexChange","e","value","Layout","Seo","CategoryPageHeader","PostTabs"],"sourceRoot":""}