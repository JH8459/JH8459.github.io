{"componentChunkName":"component---src-templates-blog-template-js","path":"/2025-02-04-PROJECT/","result":{"data":{"cur":{"id":"0ee5052e-a101-562c-9b4c-27c37d3b48c5","html":"<p><img src=\"https://jh8459.s3.ap-northeast-2.amazonaws.com/blog/2025-02-04-PROJECT/github.png\" alt=\"project-github.png\"></p>\n<br>\n<h2 id=\"github-프로필-블로그-포스트-자동-업데이트\" style=\"position:relative;\"><a href=\"#github-%ED%94%84%EB%A1%9C%ED%95%84-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EC%8A%A4%ED%8A%B8-%EC%9E%90%EB%8F%99-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8\" aria-label=\"github 프로필 블로그 포스트 자동 업데이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github 프로필 블로그 포스트 자동 업데이트</h2>\n<h3 id=\"1-개발-목적\" style=\"position:relative;\"><a href=\"#1-%EA%B0%9C%EB%B0%9C-%EB%AA%A9%EC%A0%81\" aria-label=\"1 개발 목적 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 개발 목적</h3>\n<hr>\n<p>현재 사용중인 블로그는 소프트웨어 개발을 해오며 겪은 이슈들의 기록 혹은 느낀 감정들의 회고를 작성하려는 목적으로 운영중이다.</p>\n<p>직업이 이렇다 보니 직접 구현하고 싶은 욕심에 <strong>Gatsby</strong>를 활용해서 나만의 블로그를 제작해서 운영중이다. (다시 블로그 서비스를 선택할 수 있는 순간이 돌아온다면 <del>벨로그(Velog)</del> 혹은 <del>미디엄(Medium)</del> 서비스를 선택할꺼다..! 😂)</p>\n<p>하지만 대중적인 서비스를 이용하지 않아 검색 엔진 최적화와는 거리가 멀기 때문에 열심히 작성한 포스트들도 조회수는 처참하다!.. <del>(라고 핑계를 대본다.)</del></p>\n<p>그러던중 <strong>Gatsby</strong> 플러그인을 활용하여 내가 작성한 블로그 포스트들 또한 RSS 피드. 즉, <strong>웹 피드</strong>로 발행할 수 있는 사실을 알았다.</p>\n<p><img src=\"https://jh8459.s3.ap-northeast-2.amazonaws.com/blog/2025-02-04-PROJECT/rss.png\" alt=\"rss.png\">\r\n<br></p>\n<center><strong>현재 유명 개발 블로그들의 최신 트렌드를 슬랙 채널로 RSS 피드를 받아보고 있다. 👀</strong></center><br><br>\n<p>언젠간 위와 같은 유용한 포스트들을 발행할 수 있길 희망해보며 <strong>Gatsby</strong> 블로그에 RSS 피드 발행을 위한 플러그인 설치 및 기본 설정을 마친 뒤 이를 테스트해 볼 겸 Github 프로필에 최신 포스트들이 자동으로 갱신될 수 있도록 간단한 자동화 구현을 해보았다.</p>\n<br>\r\n<br>\n<h3 id=\"2-구현-과정\" style=\"position:relative;\"><a href=\"#2-%EA%B5%AC%ED%98%84-%EA%B3%BC%EC%A0%95\" aria-label=\"2 구현 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 구현 과정</h3>\n<hr>\n<p>Github 저장소 중 본인의 닉네임과 같은 이름의 저장소는 <strong>Special Repository</strong>로 분류된다.</p>\n<p><img src=\"https://jh8459.s3.ap-northeast-2.amazonaws.com/blog/2025-02-04-PROJECT/special+repository.png\" alt=\"special repository.png\"></p>\n<p>또한 해당 저장소의 <code class=\"language-text\">README.md</code> 파일은 본인 프로필의 메인 화면에 노출되어 개발자들의 개성을 드러내는 공간으로 활용된다.</p>\n<p>이 <strong>Special Repository</strong>는 일반 저장소들과 동일한 기능들이 마찬가지로 제공되므로 여러 방법으로 활용할 수 있다. 간단한 이벤트 함수 코드를 작성하고 Github Action을 사용하여 이벤트 함수를 매일 지정한 시간에 동작시켜 블로그 RSS 피드를 가져와 <code class=\"language-text\">README.md</code> 파일을 갱신하는 계획을 갖고 구현을 해보았다.</p>\n<br>\r\n<br>\n<h4 id=\"2-1-special-repository-clone\" style=\"position:relative;\"><a href=\"#2-1-special-repository-clone\" aria-label=\"2 1 special repository clone permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-1. Special Repository Clone</h4>\n<hr>\n<p>사실 구현해야 할 코드가 간단하므로 클론을 통해 로컬로 프로젝트를 통째로 가져올 이유는 없다. (취향에 따라 로컬에 작성한 파일들을 직접 Special Repository에 업로드해도 무방하다.)</p>\n<p>나는 <code class=\"language-text\">README.md</code> 파일만 존재하는 상태의 <strong>Special Repository</strong>를 클론하여 로컬로 가져 온 뒤 CLI 명령으로 작업을 진행하였다.</p>\n<br>\r\n<br>\n<h4 id=\"2-2-이벤트-함수-코드-작성\" style=\"position:relative;\"><a href=\"#2-2-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%ED%95%A8%EC%88%98-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1\" aria-label=\"2 2 이벤트 함수 코드 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-2. 이벤트 함수 코드 작성</h4>\n<hr>\n<p>익숙한 언어를 활용하기 위해 <code class=\"language-text\">node.js</code> 기반으로 동작하게끔 <code class=\"language-text\">.js</code>로 이벤트 함수를 간단히 작성하였다.</p>\n<p>많은 라이브러리를 설치할 예정은 아니므로 로컬 프로젝트 저장소 내에 아래 명령어로 패키지 매니저를 사용할 수 있도록 간단히 초기화를 진행한 뒤 아래 패키지들을 설치해주었다.</p>\n<blockquote>\n<p>npm init -y</p>\n<p>npm i dotenv</p>\n<p>npm i rss-parser</p>\n</blockquote>\n<br>\n<p>또한 이벤트 함수 코드를 작성하기 위해 <code class=\"language-text\">readme.js</code> 파일을 추가해주었다. (파일명은 자유롭게 작성해도 된다.) 위 과정을 마치면 아래와 같은 저장소 구조를 갖게 된다.</p>\n<p><img src=\"https://jh8459.s3.ap-northeast-2.amazonaws.com/blog/2025-02-04-PROJECT/readmejs.png\" alt=\"readmejs.png\">\r\n<br></p>\n<center><strong>node_modules 폴더는 저장소 업로드 전 삭제하였다. ❌</strong></center><br><br>\n<p>그 후 아래의 코드를 <code class=\"language-text\">readme.js</code> 파일에 작성해 주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> dotenv <span class=\"token keyword\">from</span> <span class=\"token string\">'dotenv'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> Parser <span class=\"token keyword\">from</span> <span class=\"token string\">'rss-parser'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> readFileSync<span class=\"token punctuation\">,</span> writeFileSync <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'node:fs'</span><span class=\"token punctuation\">;</span>\r\n\r\ndotenv<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// .env 파일 로드</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token constant\">README_PATH</span> <span class=\"token operator\">=</span> <span class=\"token string\">'README.md'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token constant\">RSS_FEED_URL</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">RSS_FEED_URL</span> <span class=\"token operator\">||</span> <span class=\"token string\">'https://blog.jh8459.com/rss'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token constant\">SECTION_HEADER</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SECTION_HEADER</span> <span class=\"token operator\">||</span> <span class=\"token string\">'## 📚 &amp;#160;Blog Posts'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token constant\">INSERT_MARKER</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">INSERT_MARKER</span> <span class=\"token operator\">||</span> <span class=\"token string\">'&lt;br>\\n\\n---'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 날짜 변환 함수: EX \"Fri, 17 Jan 2025 00:00:00 GMT\" → \"2025/01/17\"</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">formatPubDate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pubDate</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>pubDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> year <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getUTCFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> month <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getUTCMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 월(1~12)</span>\r\n    <span class=\"token keyword\">const</span> day <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getUTCDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 일(01~31)</span>\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>year<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>month<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>day<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'날짜 변환 중 오류 발생:'</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 오류 발생 시 빈 문자열 반환</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// RSS 피드에서 최신 블로그 글 목록을 가져오는 함수</span>\r\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchRecentPosts</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">feedUrl<span class=\"token punctuation\">,</span> limit <span class=\"token operator\">=</span> <span class=\"token number\">5</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> parser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Parser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">Accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/rss+xml, application/xml, text/xml; q=0.1'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> feed <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseURL</span><span class=\"token punctuation\">(</span>feedUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">return</span> feed<span class=\"token punctuation\">.</span>items\r\n      <span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> limit<span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">,</span> pubDate <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">const</span> formattedDate <span class=\"token operator\">=</span> <span class=\"token function\">formatPubDate</span><span class=\"token punctuation\">(</span>pubDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">- [</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">](</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>link<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">) - </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>formattedDate<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'RSS 피드 파싱 중 오류 발생:'</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 오류 발생 시 빈 문자열 반환</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// README.md 파일의 내용을 읽어오는 함수</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">readReadme</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">filePath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'README.md 파일을 읽는 중 오류 발생:'</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 오류 발생 시 빈 문자열 반환</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// README.md 파일을 업데이트하는 함수</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateReadme</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">filePath<span class=\"token punctuation\">,</span> newPosts</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>newPosts<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">let</span> content <span class=\"token operator\">=</span> <span class=\"token function\">readReadme</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INSERT_MARKER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> sectionRegex <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">SECTION_HEADER</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">[\\\\s\\\\S]*?(?=\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">INSERT_MARKER</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'m'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>sectionRegex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// 기존 SECTION_HEADER가 존재하는 경우, 내용을 교체</span>\r\n      content <span class=\"token operator\">=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>sectionRegex<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">SECTION_HEADER</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>newPosts<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// SECTION_HEADER가 존재하지 않는 경우, 새롭게 추가</span>\r\n      content <span class=\"token operator\">=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INSERT_MARKER</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">SECTION_HEADER</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>newPosts<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">INSERT_MARKER</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token function\">writeFileSync</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'✅ README.md 업데이트 완료'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'README.md 파일을 저장하는 중 오류 발생:'</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'⚠️ README.md에서 삽입할 위치를 찾을 수 없습니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 실행 함수</span>\r\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> recentPosts <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchRecentPosts</span><span class=\"token punctuation\">(</span><span class=\"token constant\">RSS_FEED_URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">updateReadme</span><span class=\"token punctuation\">(</span><span class=\"token constant\">README_PATH</span><span class=\"token punctuation\">,</span> recentPosts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p>작성한 코드는 주석을 통해 설명해두었으며 이 중 아래 변수들은 다음과 같은 주요한 기능들을 담당한다.</p>\n<ol>\n<li>\n<p><code class=\"language-text\">RSS_FEED_URL</code>: 본인 블로그의 RSS 피드 URL 주소.</p>\n</li>\n<li>\n<p><code class=\"language-text\">SECTION_HEADER</code>: 추가될 헤더 문자열.</p>\n<ul>\n<li>⚠️ <code class=\"language-text\">SECTION_HEADER</code>에 담긴 문자열이 <code class=\"language-text\">README.md</code> 파일 내부 존재유무에 따라 최종 결과물에 영향을 미치므로 중복된 문자열이 존재하면 안된다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">INSERT_MARKER</code>: 블로그 최신 글 목록이 삽입할 위치에 해당하는 문자열.</p>\n<ul>\n<li>⚠️ <code class=\"language-text\">INSERT_MARKER</code>는 반드시 <code class=\"language-text\">README.md</code> 파일 내부 존재해야 하며, 해당 문자열이 블로그 최신 글 목록으로 치환된 후 <code class=\"language-text\">INSERT_MARKER</code>가 뒤에 다시 삽입된다.</li>\n</ul>\n</li>\n</ol>\n<br>\n<p>이벤트 함수 작성이 끝난 뒤 작성한 이벤트 함수가 간단한 스크립트로 실행될 수 있도록 <code class=\"language-text\">package.json</code> 파일을 수정하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\r\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"blog-rss-parser\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"블로그 RSS를 사용해서 깃허브 프로필에 최신 포스팅을 자동으로 업데이트합니다.\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 프로젝트 단위로 ES 모듈 적용</span>\r\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node readme.js\"</span> <span class=\"token comment\">// 작성한 이벤트 함수 파일명과 동일하게 수정</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ISC\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token property\">\"dotenv\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^16.4.7\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token property\">\"rss-parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.13.0\"</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\r\n<br>\n<h4 id=\"2-3-github-action-스크립트-작성\" style=\"position:relative;\"><a href=\"#2-3-github-action-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%9E%91%EC%84%B1\" aria-label=\"2 3 github action 스크립트 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-3. Github Action 스크립트 작성</h4>\n<hr>\n<p>마지막으로 Github Action 스크립트(<code class=\"language-text\">cron_action.yml</code>)를 작성하기 이전에 저장소 설정에 들어가서 환경 변수 설정을 해주어야 한다.</p>\n<p><img src=\"https://jh8459.s3.ap-northeast-2.amazonaws.com/blog/2025-02-04-PROJECT/setting.png\" alt=\"setting.png\">\r\n<br></p>\n<center><strong>GA_PAT는 \"Personal Access Token\" 을 의미한다.</strong></center><br><br>\n<p>스크립트는 위 이벤트 함수가 매일 정해진 시간에 동작될 수 있도록 구현하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cron_action\r\n\r\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">cron</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'0 15 * * *'</span>\r\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\r\n      <span class=\"token punctuation\">-</span> master\r\n\r\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\r\n\r\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout repository\r\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\r\n\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set up Node.js\r\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v3\r\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\r\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'20.18.0'</span>\r\n          <span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'npm'</span>\r\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\r\n          <span class=\"token key atrule\">GH_PAT</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GH_PAT <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\r\n          touch .env\r\n          echo RSS_FEED_URL=${{ secrets.RSS_FEED_URL }} >> .env\r\n          echo SECTION_HEADER=${{ secrets.SECTION_HEADER }} >> .env\r\n          echo INSERT_MARKER=${{ secrets.INSERT_MARKER }} >> .env</span>\r\n\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Start application\r\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\r\n          npm run start &amp;\r\n          sleep 10</span>\r\n\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Commit README\r\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\r\n          git config --local user.name 'BLOG-RSS-PARSER [BOT]'\r\n          git config --local user.email 'JH8459@example.com'\r\n          if [ -n \"$(git status --porcelain README.md)\" ]; then\r\n            git add README.md\r\n            git commit -m 'Update README.md by BLOG-RSS-PARSER [BOT]'\r\n            git push\r\n          else\r\n            echo \"No changes to commit.\"\r\n          fi</span>\r\n\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Terminate workflow\r\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo \"Workflow finished after 10 seconds<span class=\"token tag\">!</span>\"\r\n</code></pre></div>\n<br>\n<p>액션의 동작 조건이 코드가 <code class=\"language-text\">master</code> 브런치에 업로드 되는 경우와 특정 시간대 2가지이므로 테스트 또한 간단히 진행이 가능했다.</p>\n<br>\r\n<br>\n<h2 id=\"-understanding\" style=\"position:relative;\"><a href=\"#-understanding\" aria-label=\" understanding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 Understanding</h2>\n<p>결론적으로 아래와 같은 깃허브 프로필 결과물을 얻을 수 있었다.</p>\n<p><img src=\"https://jh8459.s3.ap-northeast-2.amazonaws.com/blog/2025-02-04-PROJECT/profile.png\" alt=\"profile.png\"></p>\n<p>개발 문화 중 가장 멋지다 생각이 드는건 창작을 하는 집단 중 가장 개방적인 집단이라는 점이다.</p>\n<p>고로 이번 포스팅의 목적 또한 나와 같은 고민을 하는 이가 있다면 조금이라도 도움이 되고자 되도록 간단하고 유연한 구조로 구현하려 노력해보았다. 하지만 아무래도 각기 다른 깃허브 프로필이 존재하므로 모두 대응할 순 없을꺼라 생각한다.</p>\n<p>거창하진 않지만 블로그 유입에 도움이 되지 않을까? 라는 생각이 든 김에 만들어 본 토이 프로젝트이다.</p>\n<br>\r\n<br>","excerpt":"project-github.png Github 프로필 블로그 포스트 자동 업데이트 1. 개발 목적 현재 사용중인 블로그는 소프트웨어 개발을 해오며 겪은 이슈들의 기록 혹은 느낀 감정들의 회고를 작성하려는 목적으로 운영중이다. 직업이 이렇다 보니 직접 구현하고 싶은 욕심에 Gatsby를 활용해서 나만의 블로그를 제작해서 운영중이다. (다시 블로그 서비스를 선택할 수 있는 순간이 돌아온다면 벨로그(Velog) 혹은 미디엄(Medium) 서비스를 선택할꺼다..! 😂) 하지만 대중적인 서비스를 이용하지 않아 검색 엔진 최적화와는 거리가 멀기 때문에 열심히 작성한 포스트들도 조회수는 처참하다!.. (라고 핑계를 대본다.) 그러던중 Gatsby 플러그인을 활용하여 내가 작성한 블로그 포스트들 또한 RSS 피드. 즉, 웹 피드로 발행할 수 있는 사실을 알았다. rss.png\r\n 언젠간 위와 같은 유용한 포스트들을 발행할 수 있길 희망해보며 Gatsby 블로그에 RSS 피드 발행을 위한 플러그인…","timeToRead":5,"tableOfContents":"<ul>\n<li>\n<p><a href=\"#github-%ED%94%84%EB%A1%9C%ED%95%84-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EC%8A%A4%ED%8A%B8-%EC%9E%90%EB%8F%99-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8\">Github 프로필 블로그 포스트 자동 업데이트</a></p>\n<ul>\n<li>\n<p><a href=\"#1-%EA%B0%9C%EB%B0%9C-%EB%AA%A9%EC%A0%81\">1. 개발 목적</a></p>\n</li>\n<li>\n<p><a href=\"#2-%EA%B5%AC%ED%98%84-%EA%B3%BC%EC%A0%95\">2. 구현 과정</a></p>\n<ul>\n<li><a href=\"#2-1-special-repository-clone\">2-1. Special Repository Clone</a></li>\n<li><a href=\"#2-2-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%ED%95%A8%EC%88%98-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1\">2-2. 이벤트 함수 코드 작성</a></li>\n<li><a href=\"#2-3-github-action-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%9E%91%EC%84%B1\">2-3. Github Action 스크립트 작성</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-understanding\">🤔 Understanding</a></p>\n</li>\n</ul>","frontmatter":{"date":"2025.02.04","title":"Github 프로필 블로그 포스트 자동 업데이트","categories":"Project","author":"JH8459","emoji":"🔥"},"fields":{"slug":"/2025-02-04-PROJECT/"}},"next":{"id":"27677ff8-1d51-5e43-9e21-faf101043917","frontmatter":{"date":"2025.01.17","title":"AWS Lambda + EventBridge를 사용한 S3 리소스 관리","categories":"TIL","author":"JH8459","emoji":"📚"},"fields":{"slug":"/2025-01-17-TIL/"}},"prev":{"id":"83b89f59-35a3-56a4-bb3c-5db854196edf","frontmatter":{"date":"2025.03.09","title":"AWS Solution Architect Associate (SAA-C03) 취득 후기","categories":"Retrospect","author":"JH8459","emoji":"🤔"},"fields":{"slug":"/2025-03-09-RETROSPECT/"}},"site":{"siteMetadata":{"siteUrl":"https://blog.jh8459.com","comments":{"giscus":{"repo":"JH8459/JH8459.github.io","repoId":"R_kgDOI03HgA","category":"Comments","categoryId":"DIC_kwDOI03HgM4CtuXL"}}}}},"pageContext":{"slug":"/2025-02-04-PROJECT/","nextSlug":"/2025-01-17-TIL/","prevSlug":"/2025-03-09-RETROSPECT/"}},"staticQueryHashes":["1073350324","2009502679","2938748437","962130685"],"slicesMap":{}}