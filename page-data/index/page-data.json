{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"63a45b43-46e4-54d6-a438-9d3d6044d2d4","excerpt":"✍️ Today I Learned 1. Git Git이란 분산형 버전 관리 시스템(Version Control System) 의 한 종류이며, 빠른 수행 속도에 중점을 둔다. “버전 관리 시스템” 이란 파일 변화를 시간에 따라 기록했다가 이후에 특정 시점의 버전을 다시 꺼내올 수 있는 시스템이다. 동일한 정보에 대한 여러 버전을 관리하게 되며, 버전을 통해 시간적으로 변경 사항과 변경 사항을 작성한 작업자를 추적할 수 있다. 1-1. GitHub Git을 통하여 버전관리를 한다 이미 언급을하였다. 그렇다면 Github는 무엇일까? Github는 Git Repository를 관리할 수 있는 클라우드 기반 서비스이다. 즉, Git으로 버전을 관리하는 폴더에 대해서 Github을 통해 여러 사람들이 공유하고 접근할 수 있게되기때문에 Git이 분산형 버전 관리 시스템으로 불리울 수 있게된다. 1-2. Git Repository 내가 작업하는 소스 코드 폴더가 버전 관리를 받게 하기 위해서는…","frontmatter":{"categories":"CodeStates TIL","title":"Git","date":"July 29, 2021"},"fields":{"slug":"/2021-07-29-TIL/"}}},{"node":{"id":"6f3c033e-32ac-5686-b188-6dcbe1052546","excerpt":"✍️ Today I Learned 1. Linux CLI 명령 줄 인터페이스(CLI, Command line interface) 또는 명령어 인터페이스는 텍스트 터미널을 통해 사용자와 컴퓨터가 상호 작용하는 방식을 뜻한다. 즉, 작업 명령은 사용자가 컴퓨터 키보드 등을 통해 문자열의 형태로 입력하며, 컴퓨터로부터의 출력 역시 문자열의 형태로 주어진다. 2. 패키지와 패키지 매니저 2-1. 패키지 리눅스에서 빈번하게 사용하는 ‘패키지’ 란 커널 및 라이브러리 버전의 배포판 환경에 맞추어 빌드한 실행파일을 압축한 것이다. 우분투 환경에서는 을 이용하기에 해당 방식을 학습하였으며, 해당 환경으로 환경을 구성하였다. 2-2. 패키지 매니저 APT(Advanced Packaging Tool) 는 데비안과 우분투를 포함하여 데비안 계열 리눅스 배포판들의 주 패키지 관리 도구이다. 3. Node.js 쉽게 말하면 JavaScript 런타임(Runtime)이다. 여기서 런타임이란 프로그래밍 언어가…","frontmatter":{"categories":"CodeStates TIL","title":"Linux CLI, 패키지와 패키지 매니저, Node.js, React","date":"July 28, 2021"},"fields":{"slug":"/2021-07-28-TIL/"}}},{"node":{"id":"c71b3930-df22-5eb2-8db8-23ff0f1af820","excerpt":"✍️ Today I Learned 1. 계산기 실습 : github repository 스크린샷, 2021-08-04 23-13-16 🤔 Understanding 점점.. 수업 내용을 한번에 따라잡기가 어렵다. 장기전이다, 멘탈 관리. 모르는 부분이있다면 붙잡고 끙끙 앓기보다는 조금더 학습 후 주말중 부족한 부분을 다시 학습하여 멘탈 관리 및 부족한 부분을 메꿔나가야 할 듯 하다. CSS .. 만만히 볼 분야가 절대 아니다. JS를 통하여 CSS를 조작하거나 제어하는 분야 말고도 특정한 상태나 규칙에 따라 CSS 스스로 동작하는 선택자들 또한 존재하였다. CSS로 인해 단순 코드 몇줄 만으로도 코드가 다이나믹해지는 효과를 볼 수 있다. 선택자에는 태그, id, class만 선택되는줄 알았는데 복합선택자, 부모/자식 개념까지 으.. 절대 만만하지 않다. ✍️ Today I Learned 1. 계산기 실습 : github repository 🤔 Understanding","frontmatter":{"categories":"CodeStates TIL","title":"계산기 실습 (Nightmare)","date":"July 27, 2021"},"fields":{"slug":"/2021-07-27-TIL/"}}},{"node":{"id":"c8cabb62-eb8d-56f6-93c5-0d8533bb110b","excerpt":"✍️ Today I Learned 1. 계산기 실습 : github repository 스크린샷, 2021-08-04 23-11-14 🤔 Understanding , ,  세분화 된 학습이 아닌, 세가지의 모든 기능을 더한 웹페이지 만들기는 생각보다 상호간 작용을 염두해야 원활이 구현된다. ✍️ Today I Learned 1. 계산기 실습 : github repository 🤔 Understanding","frontmatter":{"categories":"CodeStates TIL","title":"계산기 실습","date":"July 26, 2021"},"fields":{"slug":"/2021-07-26-TIL/"}}},{"node":{"id":"e4a8365d-08d9-5ce2-9e40-4295904aa782","excerpt":"✍️ Today I Learned 1. CSS CSS 문법 css문법 선택자(selector) 에는 태그이름이나 id 또는 클래스 등이 올수있다. 선택자로 특정 요소를 선택할수 있으며, 선택 후 중괄호 안의 선언 블럭에서 이 선택자에 적용 할 내용들을 작성한다. id는 한 문서에 단 하나의 id 값을 가질수 있으며  기호를 이용하여 선택한다. class는 동일한 기능을 하는 css를 여러 요소에 적용하기 위해 선택되며  기호를 이용하여 선택한다. 속성은 선택자 안에 요소로써 적용할 수 있는 내용이다. 속성과 값의 끝에는 세미콜론 을 붙여 속성끼리 구분한다. 다양한 속성 값은 해당링크에서 참조하자 CSS 참고서 -MDN. 박스모델은 레이아웃 설계시 가장 주의하여 구성해야 한다. (줄바꿈이 되는 박스(block), 옆으로 붙는 박스(inline, inline-block)가 있기에 설계시 미리 계획 후 설계해야한다.)  block inline-block inline 줄바꿈 여부 O X X…","frontmatter":{"categories":"CodeStates TIL","title":"소비자들과 맞닿는 영역의 CSS","date":"July 23, 2021"},"fields":{"slug":"/2021-07-23-TIL/"}}},{"node":{"id":"59993350-7ff9-505e-8493-364071e93be7","excerpt":"✍️ Today I Learned 1. 반복문 코플릿 오늘 학습한 내용 중 가장 인상 깊었던 코드 풀이를 다시 한번 복습해보겠다. 핵심 포인트는 임의의 수를 입력받아 홀수인지 아닌지 여부를 리턴해야 한다. 반복문(while)문을 사용해야 합니다. 나눗셈(/), 나머지(%) 연산자 사용은 금지됩니다. 0은 짝수로 간주합니다. 🤔 Understanding 시간이 어디로 사라진거지?.. 반복문 개념학습은 1시간 코드풀이는 5시간.., 이중반복문은 조금 많이많이 애먹었지만 확실히 문제를 풀어가며 pair와 함께 머리를 맞대며 도출해내는 과정은 희열감이 느껴지기도 했다. 확실히 개념 수업보단 직접 짜본 내 코드들을 디버깅해가는 과정이 학습에는 더욱 도움이 되는 듯 하였다. 실제로 시간이 금방금방 지나가는 기적을 겪였다… 기본 수업 외에 오늘은 추가 학습을 못한듯하다… 어젠 분명 리액트 수업이 재밌었는데.. 개발환경 구축하고 나니 오늘은 터미널을 켜보지도 못했다. 스트레스 컨트롤도 중요하다. …","frontmatter":{"categories":"CodeStates TIL","title":"반복문 코플릿","date":"July 22, 2021"},"fields":{"slug":"/2021-07-22-TIL/"}}},{"node":{"id":"410e2f05-a6a1-5598-9c62-871207831d64","excerpt":"✍️ Today I Learned 1. 문자열 문자열은 배열처럼 요소 하나씩 접근이 가능하다. index로 접근은 가능하지만 쓸 수는 없다는 (read-only) 특징을 가진다. 문자열은 + 연산자를 쓸 수 있다. string 타입과 다른 타입 사이에 + 연산자를 쓰면, string 형식으로 변환된다. (toString) 문자열의 표현방식중 템플릿 리터럴은 내장된 표현식을 허용하는 문자열 리터럴이다. 여러 줄로 이뤄진 문자열과 문자 보간기능을 사용할 수 있다. 이전 버전의 ES2015사양 명세에서는 “template strings” (템플릿 문자열) 라고 불려 왔다.\nES6는 템플릿 리터럴(Template literal) 이라고 불리는 새로운 문자열 표기법을 도입하였다. 템플릿 리터럴은 일반 문자열과 비슷해 보이지만, ‘ 또는 “ 같은 통상적인 따옴표 문자 대신 백틱(backtick) 문자 ` 를 사용한다. 2. 호이스팅 함수 안에 있는 선언들을 모두 끌어 올려서 해당 함수 유효범위…","frontmatter":{"categories":"CodeStates TIL","title":"문자열, 호이스팅, React","date":"July 21, 2021"},"fields":{"slug":"/2021-07-21-TIL/"}}},{"node":{"id":"46c59097-84f7-5b08-999b-47ff07a4c755","excerpt":"✍️ Today I Learned 1. 변수 변수를 이용하면 데이터를 편리하게 저장하고 꺼내 쓸 수 있게 한다. 변수의 선언과 값의 할당에 대해서 학습하였다. 선언(declaration)을 통하여 변수를 선언할 수 있다. 할당(assignment)을 통하여 변수에 값을 저장하게 된다. 이때 사용되는 ’=‘은 같다라는 뜻이 아닌 ‘할당 연산자(Assignment operator)‘이다. var, let, const 선언방식의 차이점을 학습하였다.  var let const 중복선언 O X X 재할당 O O X 변수명은 다음의 규칙에 따라 명명된다.  Camel Case  할당이 없는 변수의 경우  값을 가진다. (값이 없는게 아닌 해당 값을 가진다) 2. 타입 원시 자료형, 참조 자료형을 학습하였다. typeof 연산자를 통하여 특정 갑의 타입을 확인할 수 있다. 3. 함수 함수는 “작은 기능의 단위”이며 키워드(keyword), 이름(name), 매개변수(parameter), 몸통(…","frontmatter":{"categories":"CodeStates TIL","title":"변수, 타입, 함수, 조건문, HTML","date":"July 20, 2021"},"fields":{"slug":"/2021-07-20-TIL/"}}},{"node":{"id":"68f68db4-155c-5b66-b94d-803488d97f40","excerpt":"✍️ Today I Learned 1. 학습 툴 셋팅 리눅스(Ubuntu OS) 환경에 기본 개발환경 구축. 🤔 Understanding 코드스테이츠 1일차 OT를 받았다.\n앞으로의 강의 일정 및 학습 방식에 대해서 설명을 들었다. 오늘은 강의라기보다는 줌을 통해서 코드스테이츠 강사분들과 소통한 느낌을 받았다. 오늘 OT의 중점은 “자기주도적 학습”.\n모든 커리큘럼이 온라인을 통하여 수업이 진행되며 질문 또한 “Agora States”라는 웹사이트를 통해 진행되기때문에.. 커리큘럼을 완주하려면 스스로 커리큘럼을 지키려 노력을 해야한다. 이러한 학습태도는 앞으로 수료시점까지는 당연하며 개발자로써 평생 몸에 지녀야할 기본소양이라 느껴진다. 평생 공부해야지.. ✍️ Today I Learned 1. 학습 툴 셋팅 🤔 Understanding","frontmatter":{"categories":"CodeStates TIL","title":"코드스테이츠 1일차","date":"July 19, 2021"},"fields":{"slug":"/2021-07-19-TIL/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"김정현","bio":{"role":"백엔드 개발자","description":["노력에 가치를 두는","능동적으로 일하는","필요한 것을 만드는"],"thumbnail":"thumbnail.gif"},"social":{"github":"https://github.com/JH8459","linkedIn":"https://www.linkedin.com/in/jeonghyun-kim-8b7a80237","email":"kk_ong2233@naver.com"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437","3350743975"]}