{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/BOOK","result":{"pageContext":{"currentCategory":"BOOK","categories":["All","BOOK","TIL","Retrospect","Project"],"edges":[{"node":{"id":"8aeb24ea-e8c0-5794-8313-ad59eb767004","excerpt":"👀 독서후기 1 ~ 4장 「클린코드」 독서 후기 1. 깨끗한 코드 코드가 사라질까? 코드는 요구사항을 표현하는 언어이다. 감정만으로 요구사항이 모두 전달되어 시스템을 구성할 수는 없다. 나쁜코드 특 같은 버그가 지속 적으로 발생한다. 출시에 바빠 코드를 짜내려가는 속도는 빠르지만 생산성은 0으로 수렴한다. 나쁜코드를 짠 뒤 안돌아가는 프로그램보다는 낫지라는 자기 위안을 한다. 깨끗한 코드란? 프로그래머 수만큼 정의는 다양하다. C++ 창시자인 비야네 스트롭스트룹이 정의한 클린코드의 정의가 제일 와닿았다. “논리가 간단해야 버그가 숨어들지 못한다” “의존성을 최대한 줄여야 유지보수가 쉬워진다.” “오류는 명백한 전략에 의거해 철저히 처리한다.” “깨끗한 코드는 한 가지 동작을 제대로 해낸다.” 그 외에도 테스트 없는 코드는 깨끗한 코드일 수 없다 등등.. 오래된 개발 서적치고는 요즘 트렌드를 너무나 잘 명세하고 있다. 아무튼 좋은 코드 및 깨끗한 코드를 요약하자면 중복을 피해라 한 …","fields":{"slug":"/2023-03-20-BOOK/"},"frontmatter":{"categories":"BOOK","title":"Clean Code - 1","date":"March 20, 2023"}},"next":{"fields":{"slug":"/2022-07-01-TIL/"}},"previous":null}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}