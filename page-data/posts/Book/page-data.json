{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Book","result":{"pageContext":{"currentCategory":"Book","categories":["All","Project","TIL","Retrospect","Book"],"edges":[{"node":{"id":"54d70136-469e-5f99-87fe-669b5ab9c3da","excerpt":"📓 독서후기 「개발자에서 아키텍트로」 독서 후기 1부. 소프트웨어 아키텍처 1장. 소프트웨어 아키텍트가 되다 2장. 디자인 싱킹 기초 2부. 아키텍처 설계의 기초 3장. 설계 전략 고안하기 4장. 이해관계자와 공감하기 5장. 아키텍처 핵심 요구사항 알아내기 6장. 아키텍처 선택하기 7장. 패턴으로 기초 만들기 8장. 의미 있는 모델로 9장. 아키텍처 디자인 스튜디오 운영하기 10장. 설계 시각화하기 11장. 아키텍처 문서화하기 12장. 아키텍처 평가하기 13장. 아키텍트에게 힘 실어주기 3부. 아키텍트의 은빛 도구상자 14장. 문제를 이해하고 싶을 때 15장. 해결책을 찾고 싶을 때 16장. 손에 잡히는 설계를 17장. 설계 대안을 평가하고 싶을 때 소프트웨어 구조 설계를 엿보고 싶어 읽기 시작했지만, 단순히 소프트 웨어 설계에 대한 내용뿐만 아니라 개발자로써 많은 생각을 할 수 있었던 서적이었다. 「개발자에서 아키텍트로」 독서 후 개인적으로 인상 깊었던 큰 맥락들만 추려서 간략하…","fields":{"slug":"/2024-10-11-BOOK/"},"frontmatter":{"categories":"Book","title":"개발자에서 아키텍트로","date":"October 11, 2024"}},"next":{"fields":{"slug":"/2024-07-18-TIL/"}},"previous":{"fields":{"slug":"/2024-11-07-TIL/"}}},{"node":{"id":"96319c3f-79dd-5a90-9efb-8edb7ed59978","excerpt":"📓 독서후기 「규칙 없음」 독서 후기 1부. 자유와 책임의 문화로 가는 첫 단계 1장. 비범한 동료들이 곧 훌륭한 직장이다 2장. 자신의 생각을 있는 그대로 말하라(긍정적인 의도로) 3-1장. 휴가 규정을 없애라 3-2장. 출장 및 경비 승인을 없애라 2부. 자유와 책임의 문화로 가는 다음 단계 4장. 업계 최고 수준으로 대우하라 5장. 모든 것을 공개하라 6장. 어떤 의사결정도 승인받을 필요가 없다 3부. 자유와 책임의 문화를 강화하는 법 7장. 키퍼 테스트 8장. 피드백 서클 9장. 통제가 아닌, 맥락으로 리드하라 4부. 세계를 무대로 10장. 이제는 세계로! 한마디로 책을 요약해보자면, 넷플릭스라는 거대한 기업의 조직 운영 방침서를 엿볼 수 있었던 책이었다. (“넷플릭스”이기 때문에 가능한 것이지 범용성 있는 적용은 어려워보인다..🥲) 개발서적과는 거리가 멀지만 훌륭한 조직 문화를 배울 수 있다는 점에서는 누구에게나 추천을 해주고 싶은 책이었다. (특히나 조직의 경영진들이라면…","fields":{"slug":"/2024-06-13-BOOK/"},"frontmatter":{"categories":"Book","title":"규칙 없음","date":"June 13, 2024"}},"next":{"fields":{"slug":"/2024-05-21-BOOK/"}},"previous":{"fields":{"slug":"/2024-06-21-TIL/"}}},{"node":{"id":"ad8b92a5-c628-52f2-8207-ef5177a4b9ac","excerpt":"📓 독서후기 「좋은 코드, 나쁜 코드」 독서 후기 PART 2. 실전 7장. 코드를 오용하기 어렵게 만들라 8장. 코드를 모듈화하라 9장. 코드를 재사용하고 일반화할 수 있도록 하라 PART 3. 단위 테스트 10장. 단위 테스트의 원칙 11장. 단위 테스트의 실제 「좋은 코드, 나쁜 코드 - 1」 에 이어서 남은 챕터들을 모두 독서한 뒤 후기를 마저 남겨보려한다. 4~5월은 회사 특성상 상반기 공채 시즌으로 인해 굳이 나누자면 성수기에 가깝기에 격 주 간격으로 진행하던 “독서토론” 일정에도 조금 차질이 있었다. (절대 절대 읽기 싫어서 미룬게 아니다.. 🥲) 이번 책은 아무래도 어려운 내용도 있었고 업무적으로 바빴던 시기이기도 해서 한 권을 모두 읽는데 약 한달 이상의 시간이 걸리긴 하였지만 그래도 한권을 모두 읽고 난 뒤의 총평을 남길 수 있게 되어 기쁘다. 7장. 코드를 오용하기 어렵게 만들라 “코드를 오용하기 어렵게 만들라” 7장의 주된 내용 간단하다. 이 책에서도 제품 디…","fields":{"slug":"/2024-05-21-BOOK/"},"frontmatter":{"categories":"Book","title":"좋은 코드, 나쁜 코드 - 2","date":"May 21, 2024"}},"next":{"fields":{"slug":"/2024-05-17-RETROSPECT/"}},"previous":{"fields":{"slug":"/2024-06-13-BOOK/"}}},{"node":{"id":"a6da3518-701a-5046-be47-48cf2c1a4781","excerpt":"📓 독서후기 「좋은 코드, 나쁜 코드」 독서 후기 PART 1. 이론 1장. 코드 품질 2장. 추상화 계층 3장. 다른 개발자와 코드 계약 4장. 오류 PART 2. 실전 5장. 가독성 높은 코드를 작성하라 6장. 예측 가능한 코드를 작성하라 위 기재된 챕터들을 독서한 뒤 블로그에 후기로 정리까지 해보려한다. 많은 이가 그러하였듯이, 나 또한 개발 서적 중 처음 읽고 독서 후기로 남긴 도서가 「Clean Code」 였다. 🔗 Clean Code - 1 🔗 Clean Code - 2 🔗 Clean Code - 3 🔗 Clean Code - 4 6장까지 읽은 후기를 한줄로 요약하자면, 「Clean Code」 와 유사하다는 생각이 많이 들었다. (아직 모두 읽진 못하였지만!) 하지만, 이 책의 저자는 자신의 주장을 풀어나가는 방식이 조금 달랐다. 어떻게 다른지에 대하여 자세한 내용은 아래에 기재하였다. 1장. 코드 품질 코드 품질이 중요한 이유(당연하지만! 조금 더 구체적으로)에 대해 …","fields":{"slug":"/2024-04-24-BOOK/"},"frontmatter":{"categories":"Book","title":"좋은 코드, 나쁜 코드 - 1","date":"April 24, 2024"}},"next":{"fields":{"slug":"/2024-04-21-TIL/"}},"previous":{"fields":{"slug":"/2024-05-01-TIL/"}}},{"node":{"id":"21a6d86c-4437-5ec5-b4b0-9d08639e9ed0","excerpt":"📓 독서후기 「어떤 개발자가 살아남는가」 독서 후기 1장. AI의 시대, 우리는 어디에 있는가 2장. 알고리즘 vs 데이터 그리고 창조력 코드 3장. 누가(Subject) 무엇을(Object) 어떻게(Project) 해야 하는가 4장. 지속적인 개선 - Upgradable Software 5장. 팀워크 - 함께 만드는 소프트웨어 위 모든 챕터를 독서한 후기를 블로그에 후기로 정리까지 해보려한다. 짧게 요약하자면 정보의 홍수와 더불어 AI로 인하여 산업의 형태가 바뀌는 이 시점에 어떻게 개발자라는 직업으로 살아나갈 수 있는가에 대한 굉장히…인문학적인 내용으로 가득 찬 서적이었다. 아쉬운 점 중 하나는 OpenAI사의 ChatGPT 발표일은 2022년 11월 30일이고 이 책의 출판일은 2022년 3월 30일이라는 점이다. 1장. AI의 시대, 우리는 어디에 있는가 진보하는 AI / 인공지능 기술과 개발자의 미래에 대한 내용으로 구성되어 있다. 1장에서는 “특이점”에 대해 아래와 같이…","fields":{"slug":"/2024-04-09-BOOK/"},"frontmatter":{"categories":"Book","title":"어떤 개발자가 살아남는가","date":"April 09, 2024"}},"next":{"fields":{"slug":"/2024-04-01-RETROSPECT/"}},"previous":{"fields":{"slug":"/2024-04-18-TIL/"}}},{"node":{"id":"b960a8ac-6f74-5137-84f3-58aadc64a27d","excerpt":"📓 독서후기 「오늘도 개발자가 안 된다고 말했다」 독서 후기 1장. 가깝고도 먼 개발자 2장. 기획자의 일 3장. 디자이너의 일 4장. 개발자의 일 위 모든 챕터를 독서한 후기를 블로그에 후기로 정리까지 해보려한다.\n짧게 요약하자면 개발 지식에 밀접한 내용이라기 보다는 “협업”과 “소통”에 포커스가 맞춰진 도서였다. 1장. 가깝고도 먼 개발자 개발자의 언어를 지극히 주관적인 관점으로 조금 당황스러운 설명한 내용이 있어 첨부해본다. “User Device의 Data packet이 Access server에서 Confirm되지 않는다. 먼저 Access server debugging을 해보겠다. 이후에도 문제가 지속되면 WiFi 공유기 의 Firmware Version을 확인한 후에 Reboot을 진행하고 WiFi 공유기의 Lan Port IP를 파악한 후에 ping을 던져서 Signal을 확인하겠다. Signal이 확인되지 않을 경우에는 소프트웨어 문제가 아니므로 직접 매장에 방문해…","fields":{"slug":"/2024-03-27-BOOK/"},"frontmatter":{"categories":"Book","title":"오늘도 개발자가 안 된다고 말했다","date":"March 27, 2024"}},"next":{"fields":{"slug":"/2024-03-13-BOOK/"}},"previous":{"fields":{"slug":"/2024-04-01-RETROSPECT/"}}},{"node":{"id":"d5d45c0a-af8c-59f3-bd9b-4dbeb7bed83c","excerpt":"📓 독서후기 「개발자 원칙」 독서 후기 1장. 덕업일치를 넘어서 2장. 오류를 만날 때가 가장 성장하기 좋을 때다 3장. 소프트웨어 디자인 원칙 4장. 나의 메이저 버전을 업그레이드하는 마이너 원칙들 5장. 이직, 분명한 이유가 필요해 6장. 목표를 달성하는 나만의 기준, GPAM 7장. 프로덕트 중심주의 8장. 제어할 수 없는 것에 의존하지 않기 9장. 달리는 기차의 바퀴를 갈아 끼우기 위 모든 챕터를 독서한 후기를 블로그에 후기로 정리까지 해보려한다.\n내용 자체가 어렵지 않았고 재밌게 술술 읽혔다! 👏👏👏 모든 챕터가 훌륭했지만 주관적인 인상 깊었던 챕터들만 추려서 간략하게 후기를 남긴다. 1장. 덕업일치를 넘어서 이번장은 가트너의 재키 펜이 고안한 모델인 “하이프 사이클” 내용밖에 기억에 남지 않는다. 😆  재밌게 보았지만 우스운 내용은 아니었다. 대부분의 서비스들의 도태되는 시점은 위 그래프 중 “환멸 단계”에 해당되며, 이는 기술 수용 생애주기에서도 마찬가지라 꼬집는 내용…","fields":{"slug":"/2024-03-13-BOOK/"},"frontmatter":{"categories":"Book","title":"개발자 원칙","date":"March 13, 2024"}},"next":{"fields":{"slug":"/2023-12-30-RETROSPECT/"}},"previous":{"fields":{"slug":"/2024-03-27-BOOK/"}}},{"node":{"id":"9fd8bc0d-5f30-5496-8883-8a54610da7cb","excerpt":"📓 독서후기 「클린코드」 13 ~ 17장 독서 후기 13장. 동시성 14장. 점진적인 개선 15장. JUnit 들여다보기 16장. SerialDate 리팩터링 17장. 냄새와 휴리스틱 1주일에 4장씩 읽기가 목표이며 읽은 후기를 블로그에 후기로 정리까지 해보려한다. 이번주는 13장 「동시성」 ~ 17장 「냄새와 휴리스틱」 까지 읽은 후기를 간략히 남겨보았다.\n사실상 정규 챕터는 오늘로써 모두 읽었다! 👏👏👏 다음주에는 부록까지 (다 읽을 수 있을진 모르겠다..) 모두 읽고난 뒤 완독 후기를 남기는게 목표이다. 13. 동시성 이번장은 “동시성” 이 무엇인지에 대해서 설명하는 장이다. 무엇(What)과 언제(When)을 분리하는 것.\n동시성은 즉, 결합을 없애는 전략이다. 동시성은 잘못 개발할 시 큰 난관을 겪는다. 예를 들면 객체 하나를 공유한 후 동일 필드를 수정하던 두 스레드가 서로 간섭하는 경우 예상할 수 없는 에러가 발생하기도 한다. 이러한 문제를 해결하기 위해 임계영역 을 …","fields":{"slug":"/2023-04-16-BOOK/"},"frontmatter":{"categories":"Book","title":"Clean Code - 4","date":"April 16, 2023"}},"next":{"fields":{"slug":"/2023-04-09-BOOK/"}},"previous":{"fields":{"slug":"/2023-05-01-PROJECT/"}}},{"node":{"id":"b44fedf9-a5f2-5f95-8a47-2e3b4199e0c6","excerpt":"📓 독서후기 「클린코드」 9 ~ 12장 독서 후기 9장. 단위 테스트 10장. 클래스 11장. 시스템 12장. 창발성 1주일에 4장씩 읽기가 목표이며 읽은 후기를 블로그에 후기로 정리까지 해보려한다. 이번주는 9장 「단위 테스트」 ~ 12장 「창발성」 까지 읽은 후기를 간략히 남겨보았다. 9. 단위 테스트 사실 나는 테스트 코드를 짜본 경험이 별로 없다.\n제대로 배우고 싶지만 TDD는 아직까진 나에게 판타지로 느껴지는 개발론 중 하나이다. 이번 장에서는 테스트 코드의 중요 성을 강조하며 TDD 법칙을 설명한다. 그리고 TDD의 가장 중요한 세가지 법칙은 다음과 같다 강조한다. “실패하는 단위 테스트를 작성할 때까지 실제 코드를 작성하지 않는다.” “컴파일은 실패하지 않으면서 실행이 실패하는 정도로만 단위 테스트를 작성한다.” “현재 실패하는 테스트를 통과할 정도로만 실제 코드를 작성한다.” 이번장은 읽어보니 “테스트” 라는 걸 막연히 어렵게 느껴왔던 점에 대해 벽이 조금 허물어진 …","fields":{"slug":"/2023-04-09-BOOK/"},"frontmatter":{"categories":"Book","title":"Clean Code - 3","date":"April 09, 2023"}},"next":{"fields":{"slug":"/2023-04-02-BOOK/"}},"previous":{"fields":{"slug":"/2023-04-16-BOOK/"}}},{"node":{"id":"7e979766-4472-5cf9-975a-0360a67e91f8","excerpt":"📓 독서후기 「클린코드」 5 ~ 8장 독서 후기 5장. 형식 맞추기 6장. 객체와 자료 구조 7장. 오류 처리 8장. 경계 1주일에 4장씩 읽기가 목표이며 읽은 후기를 블로그에 후기로 정리까지 해보려한다. 이번주는 5장 「형식 맞추기」 ~ 8장 「경계」 까지 읽은 후기를 간략히 남겨보았다. 5. 형식 맞추기 주요 토픽은 프로그래머라면 형식을 깔끔하게 맞춰 코드를 짜야한다는 내용이다. 전적으로 동의한다. 그래야 소프트웨어가 일관적인 스타일을 보인다. 이번 장에서는 “행 길이”, “빈 행 구분”, “들여쓰기” 등 코드 컨벤션(관리하기 쉬운 코드를 작성하기 위한 일종의 코딩 스타일 규약)을 주로 언급한다. 사실 이 부분은 요즘은 IDE에서 제공하는 익스텐션(자바스크립트 환경에서의 ESLint, Prettier 등등)의 설정 파일을 공유하는 것 만으로 팀의 코딩 컨벤션을 맞출 수 있는 등 너무나 편리한 도구들이 제공되고 있다. 이미 실천하고 있는 부분이기 때문에 가볍게 읽고 넘어갔다. 6…","fields":{"slug":"/2023-04-02-BOOK/"},"frontmatter":{"categories":"Book","title":"Clean Code - 2","date":"April 02, 2023"}},"next":{"fields":{"slug":"/2023-03-20-BOOK/"}},"previous":{"fields":{"slug":"/2023-04-09-BOOK/"}}},{"node":{"id":"8aeb24ea-e8c0-5794-8313-ad59eb767004","excerpt":"📓 독서후기 「클린코드」 1 ~ 4장 독서 후기 1장. 깨끗한 코드 2장. 의미 있는 이름 3장. 함수 4장. 주석 어떤 개발 언어를 사용하느냐 혹은 직무가 어떻느냐와 관여없이 개발자라면 필히 읽어봐야한다는 바이블 같은 책을 드디어 읽게 되었다. 부끄러운 얘기지만 개발 서적 한권을 온전하게 A-Z 완독해본적이 없다. 😥 실제로 몇몇 책들은 필요하거나 흥미로운 부분만 읽은 다음 내팽겨치고 모니터 받침대로 쓰이곤했고, (이건 그나마 형편이 낫다.) 일부 책들은 책장을 열심히 장식하는데에만 힘을 쏟고 있는 중이다. 스스로 반성하는 의미로 “혼나는 기분”을 돈 주고 경험할 수 있을 수 있는 「클린코드」 서적을 선택해서 읽어보려한다. 1. 깨끗한 코드 이 장에서 기억에 남는 문구를 꼽자면 아래의 문장을 꼽을 것 같다. 사실 머리로는 아는데 참 적용하기 힘들다. 2주만 지나도 아니, 금요일에 짠 코드를 주말을 보내고 월요일 출근 후 다시 살펴 볼 때에도 잘 안 읽힐 (내가 짠 코드인데..) …","fields":{"slug":"/2023-03-20-BOOK/"},"frontmatter":{"categories":"Book","title":"Clean Code - 1","date":"March 20, 2023"}},"next":{"fields":{"slug":"/2022-07-01-TIL/"}},"previous":{"fields":{"slug":"/2023-04-02-BOOK/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}